{% extends 'base.html.twig' %}

{% block title %}Verify Your Email - B2Battle Electronics{% endblock %}

{% block body %}
<!-- Email Verification Header -->
<section class="py-16 relative overflow-hidden min-h-screen flex items-center">
    <!-- Background Effects -->
    <div class="absolute inset-0 bg-gradient-to-r from-yellow-400/10 via-transparent to-neon-green/10"></div>
    <div class="absolute top-0 right-1/4 w-64 h-64 bg-yellow-400/20 rounded-full blur-3xl animate-float"></div>
    <div class="absolute bottom-0 left-1/4 w-64 h-64 bg-neon-green/20 rounded-full blur-3xl animate-float" style="animation-delay: -2s;"></div>
    
    <div class="container mx-auto px-4 relative z-10">
        <div class="max-w-md mx-auto">
            <!-- Header -->
            <div class="text-center mb-12">
                <div class="w-20 h-20 bg-gradient-to-r from-yellow-400 to-neon-green rounded-full flex items-center justify-center mx-auto mb-6">
                    <i data-lucide="mail" class="w-10 h-10 text-black"></i>
                </div>
                <h1 class="text-4xl font-bold bg-gradient-to-r from-yellow-400 to-neon-green bg-clip-text text-transparent mb-4">
                    Verify Your Email
                </h1>
                <p class="text-xl text-gray-300 mb-2">
                    We've sent a verification code to
                </p>
                <p class="text-neon-green font-semibold text-lg">
                    {{ email }}
                </p>
            </div>

            <!-- Verification Form -->
            <div class="bg-gray-900/80 backdrop-blur-xl rounded-3xl p-8 border border-gray-800 shadow-2xl">
                <!-- Flash Messages -->
                {% for message in app.flashes('success') %}
                    <div class="bg-green-500/20 border border-green-500/50 text-green-300 px-4 py-3 rounded-xl mb-6">
                        {{ message }}
                    </div>
                {% endfor %}

                {% for message in app.flashes('error') %}
                    <div class="bg-red-500/20 border border-red-500/50 text-red-300 px-4 py-3 rounded-xl mb-6">
                        {{ message }}
                    </div>
                {% endfor %}

                <!-- OTP Status -->
                {% if pending_otp_info %}
                    <div class="bg-blue-500/20 border border-blue-500/50 text-blue-300 px-4 py-3 rounded-xl mb-6">
                        <div class="flex items-center justify-between">
                            <span>Code expires in: <span id="countdown" class="font-bold">{{ pending_otp_info.remaining_time_formatted }}</span></span>
                            <span class="text-sm">Attempts: {{ pending_otp_info.attempts }}/{{ pending_otp_info.max_attempts }}</span>
                        </div>
                    </div>
                {% endif %}

                <!-- OTP Form -->
                <form action="{{ path('app_verify_email_submit') }}" method="post" id="otp-form" class="space-y-6">
                    <div>
                        <label for="otp_code" class="block text-sm font-medium text-gray-300 mb-2">
                            Enter 6-digit verification code
                        </label>
                        <input 
                            type="text" 
                            id="otp_code" 
                            name="otp_code" 
                            maxlength="6" 
                            pattern="[0-9]{6}"
                            class="w-full px-4 py-4 bg-gray-800/50 border border-gray-700 rounded-xl text-white text-center text-2xl font-mono tracking-widest placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-yellow-400 focus:border-transparent transition-all duration-300"
                            placeholder="000000"
                            autocomplete="one-time-code"
                            required
                        >
                        <p class="text-gray-400 text-sm mt-2">Enter the 6-digit code sent to your email</p>
                    </div>

                    <!-- Submit Button -->
                    <button type="submit" id="verify-btn" class="w-full py-4 bg-gradient-to-r from-yellow-400 to-neon-green rounded-2xl text-black font-bold text-lg hover:shadow-lg hover:shadow-yellow-400/25 transition-all duration-300 transform hover:scale-105">
                        <span class="flex items-center justify-center space-x-3">
                            <i data-lucide="check-circle" class="w-6 h-6"></i>
                            <span>Verify Email</span>
                        </span>
                    </button>
                </form>

                <!-- Resend Section -->
                <div class="pt-6 border-t border-gray-700 mt-6">
                    <div class="text-center">
                        <p class="text-gray-400 mb-4">Didn't receive the code?</p>
                        <button id="resend-btn" class="px-6 py-3 bg-gray-800/50 border border-gray-700 rounded-xl text-white font-medium hover:bg-gray-700/50 transition-all duration-300">
                            <span class="flex items-center justify-center space-x-2">
                                <i data-lucide="refresh-cw" class="w-4 h-4"></i>
                                <span>Resend Code</span>
                            </span>
                        </button>
                        <div id="resend-cooldown" class="text-sm text-gray-500 mt-2" style="display: none;">
                            Please wait <span id="resend-timer">60</span> seconds before requesting again
                        </div>
                    </div>
                </div>

                <!-- Cancel Link -->
                <div class="text-center pt-6 border-t border-gray-700 mt-6">
                    <a href="{{ path('app_verify_email_cancel') }}" class="text-gray-400 hover:text-red-400 transition-colors duration-300 text-sm">
                        Cancel verification and register again
                    </a>
                </div>
            </div>

            <!-- Help Section -->
            <div class="mt-8 text-center">
                <div class="bg-gray-900/50 rounded-2xl p-6 border border-gray-800">
                    <h3 class="text-lg font-semibold text-white mb-3">Need Help?</h3>
                    <div class="space-y-2 text-sm text-gray-400">
                        <p>• Check your spam/junk folder</p>
                        <p>• Make sure {{ email }} is correct</p>
                        <p>• Code expires in 10 minutes</p>
                        <p>• Contact support if issues persist</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Initialize Lucide icons
    lucide.createIcons();
    
    const otpInput = document.getElementById('otp_code');
    const verifyBtn = document.getElementById('verify-btn');
    const resendBtn = document.getElementById('resend-btn');
    const resendCooldown = document.getElementById('resend-cooldown');
    const resendTimer = document.getElementById('resend-timer');
    const countdownElement = document.getElementById('countdown');
    
    let resendCooldownTime = 0;
    let countdownTime = {{ pending_otp_info.remaining_time ?? 0 }};
    
    // Auto-format OTP input
    otpInput.addEventListener('input', function() {
        this.value = this.value.replace(/\D/g, '').substring(0, 6);
        
        // Auto-submit when 6 digits entered
        if (this.value.length === 6) {
            document.getElementById('otp-form').submit();
        }
    });
    
    // Auto-focus OTP input
    otpInput.focus();
    
    // Countdown timer
    function updateCountdown() {
        if (countdownTime <= 0) {
            if (countdownElement) {
                countdownElement.textContent = 'Expired';
                countdownElement.className = 'font-bold text-red-400';
            }
            return;
        }
        
        const minutes = Math.floor(countdownTime / 60);
        const seconds = countdownTime % 60;
        const formatted = minutes > 0 ? `${minutes}m ${seconds}s` : `${seconds}s`;
        
        if (countdownElement) {
            countdownElement.textContent = formatted;
        }
        
        countdownTime--;
        setTimeout(updateCountdown, 1000);
    }
    
    if (countdownTime > 0) {
        updateCountdown();
    }
    
    // Resend functionality
    resendBtn.addEventListener('click', function() {
        if (resendCooldownTime > 0) return;
        
        this.disabled = true;
        this.innerHTML = '<i data-lucide="loader" class="w-4 h-4 animate-spin"></i> Sending...';
        lucide.createIcons();
        
        fetch('{{ path('app_verify_email_resend') }}', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Show success message
                const successDiv = document.createElement('div');
                successDiv.className = 'bg-green-500/20 border border-green-500/50 text-green-300 px-4 py-3 rounded-xl mb-6';
                successDiv.textContent = data.message;
                document.querySelector('form').insertBefore(successDiv, document.querySelector('form').firstChild);
                
                // Start cooldown
                startResendCooldown();
                
                // Reset countdown
                countdownTime = 600; // 10 minutes
                updateCountdown();
                
                // Remove success message after 5 seconds
                setTimeout(() => successDiv.remove(), 5000);
            } else {
                // Show error message
                const errorDiv = document.createElement('div');
                errorDiv.className = 'bg-red-500/20 border border-red-500/50 text-red-300 px-4 py-3 rounded-xl mb-6';
                errorDiv.textContent = data.message;
                document.querySelector('form').insertBefore(errorDiv, document.querySelector('form').firstChild);
                
                // Remove error message after 5 seconds
                setTimeout(() => errorDiv.remove(), 5000);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            const errorDiv = document.createElement('div');
            errorDiv.className = 'bg-red-500/20 border border-red-500/50 text-red-300 px-4 py-3 rounded-xl mb-6';
            errorDiv.textContent = 'Failed to resend code. Please try again.';
            document.querySelector('form').insertBefore(errorDiv, document.querySelector('form').firstChild);
            setTimeout(() => errorDiv.remove(), 5000);
        })
        .finally(() => {
            this.disabled = false;
            this.innerHTML = '<i data-lucide="refresh-cw" class="w-4 h-4"></i> Resend Code';
            lucide.createIcons();
        });
    });
    
    function startResendCooldown() {
        resendCooldownTime = 60;
        resendBtn.disabled = true;
        resendCooldown.style.display = 'block';
        
        function updateResendTimer() {
            if (resendCooldownTime <= 0) {
                resendBtn.disabled = false;
                resendCooldown.style.display = 'none';
                return;
            }
            
            resendTimer.textContent = resendCooldownTime;
            resendCooldownTime--;
            setTimeout(updateResendTimer, 1000);
        }
        
        updateResendTimer();
    }
});
</script>
{% endblock %}
